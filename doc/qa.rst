Questions and Answers
=====================

http://api.motsditsquebec.com/api/v2/questions/
http://api.motsditsquebec.com/api/v2/answers/

The Q&A endpoints provide an interface to ask questions and receive mots-dits as answers to those questions


Answers
-------

An answer consists of a **question**, a **motdit** and a **user**, and is the basic interaction model for suggesting a motdit to another user. Question objects, which are identical to MotDit objects, are generated by users, and other users may add answers to them.


Creating Questions
------------------

**POST** http://api.motsditsquebec.com/api/v2/motsdits/

Each mot-dit has 4 basic attributes:

+------------+-----------------------------------------------------------+-----------+
| Attribute  |                        Description                        |           |
+============+===========================================================+===========+
| **what**   | The object/action being referenced (eg. A burger, skiing) | required* |
+------------+-----------------------------------------------------------+-----------+
| **where**  | Where the object is (eg. Burger Royal, Le Plateau)        | required* |
+------------+-----------------------------------------------------------+-----------+
| **action** | One of the core available actions (aller, sortir..)       | required  |
+------------+-----------------------------------------------------------+-----------+

* only one of **what** or **where** is required to create a mots-dit

A simple example of creating a question would be:

.. code-block:: javascript

    {
        'what': 'an example question',
        'where': 'api documentation',
        'action': 'create'
    }

Listing Questions
-----------------

**GET** http://api.motsditsquebec.com/api/v2/questions/

Questions have the following attributes (will have at least one of **what** or **where**)

+----------------+--------------------------------------------------------------+--------------+
|   Attribute    |                         Description                          |    Notes     |
+================+==============================================================+==============+
| **action**     | The action of this question                                  |              |
+----------------+--------------------------------------------------------------+--------------+
| **what**       | The compact item_ object representing the descriptive action |              |
+----------------+--------------------------------------------------------------+--------------+
| **where**      | The compact item_ object representing the location           |              |
+----------------+--------------------------------------------------------------+--------------+
| **created_by** | A compact user_ object                                       |              |
+----------------+--------------------------------------------------------------+--------------+
| **score**      | The overall static score_ that this question has received    | # of answers |
+----------------+--------------------------------------------------------------+--------------+
| **answers**    | The total number of answers this question has                |              |
+----------------+--------------------------------------------------------------+--------------+

Questions are loaded in a paginated list, and requests can be filtered using GET parameters

+--------------+-----------------------------------------------------------------------------------+
|    Param     |                                    Description                                    |
+==============+===================================================================================+
| **order_by** | Sets the sorting of the questions, accepts: **created**, **updated**, **answers** |
+--------------+-----------------------------------------------------------------------------------+
| **page**     | Sets the page number, (default: 1)                                                |
+--------------+-----------------------------------------------------------------------------------+
| **per_page** | Sets the number per page, max of 50                                               |
+--------------+-----------------------------------------------------------------------------------+

Retrieving Questions
--------------------

**GET** http://api.motsditsquebec.com/api/v2/questions/:ID/

Retrieves a question by ID, with the fields above_


Answering Questions
-------------------

**POST** http://api.motsditsquebec.com/api/v2/questions/:ID/answers/

This endpoint accepts either an existing motdit (by ID):

.. code-block:: javascript

    {
        'motdit': 1
    }

Or if you nest a full motdit_ creation request into the motdit field, it will be created along with the answer

.. code-block:: javascript

    {
        'motdit': {
            'what': 'an example motsdit',
            'where': 'api documentation',
            'action': 'create',
            'tags': ['created', 'new', 'motdit']
        }
    }

Listing question answers
------------------------

**GET** http://api.motsditsquebec.com/api/v2/questions/:ID/answers/

This endpoint provides a **paginated** list of compact answer objects that are related to this specific Question


Deleting questions
------------------

**DELETE** http://api.motsditsquebec.com/api/v2/questions/:ID/

Users who have created questions may delete them using the DELETE endpoint. Only the owner of a question may delete it. Deleting the question will delete all of the related answers as well, and any news_ items related to the question or the answer


Deleting answers
----------------

**DELETE** http://api.motsditsquebec.com/api/v2/answers/:ID/

Users who have created answers may delete them using the DELETE endpoint. Only the owner of an answer may delete it.

.. _motdit: motsdits.html
.. _news: news.html
.. _item: items.html
.. _user: users.html
.. _score: scores.html
.. _above: #Listing Questions
